/*********************************************************************************************************
Copyright (C), 2011-8-3 ,  Skyray Instrment Co.,LTD.
File name:      	ad.h
Author:                   方卫龙 夏洪海       Version:       V2.5 Date:      2011-8-3 11:37:43
Description:    ad7606 驱动

Others:
Function List:
		extern void ADIOInit(void);
		extern uint16 GetADValue(void);
		extern fp32 GetADVoltage(uint8 point);
History:
   1. Date:                2011-8-3 12:52:43
       Author:             何顺杰
	   Modification:    规范了注释
************************************************************************************************************/

#ifndef __AD_H
#define __AD_H

/*********************************************************************************************************
**               头文件包含
*********************************************************************************************************/
#include "global.h"

/*********************************************************************************************************
**               C++代码兼容
*********************************************************************************************************/
#ifdef __cplusplus
extern "C" {
#endif                                                                  /*  __cplusplus                 */


    /*********************************************************************************************************
    **                    7606IC的控制端口
    *********************************************************************************************************/
#define		SCK_7606			(1ul<<20)			//P1.20;
#define		SDO_7606			(1ul<<21)			//P1.21;
#define		CS_7606				(1ul<<25)			//P3.25;
#define 	CONVST_7606			(1ul<<26)			//p3.26;
#define     CONV_BUSY			(1ul<<22)			//p1.22;
#define		RST_7606			(1ul<<27)			//p1.27

#define		SET_RST_7606(x)		((x) ? GPIO_SetValue(1, RST_7606): GPIO_ClearValue(1, RST_7606))
#define		SET_SCK_7606(x)		((x) ? GPIO_SetValue(1, SCK_7606): GPIO_ClearValue(1, SCK_7606))
#define		SET_SDO_7606(x)		((x) ? GPIO_SetValue(1, SDO_7606): GPIO_ClearValue(1, SDO_7606))
#define		SET_CS_7606(x)		((x) ? GPIO_SetValue(3, CS_7606): GPIO_ClearValue(3, CS_7606))
#define		SET_CONVST_7606(x)	((x) ? GPIO_SetValue(3, CONVST_7606): GPIO_ClearValue(3, CONVST_7606))
    extern fp32 GainRes[8];
    /*********************************************************************************************************
    * Function name:        ADIOInit
    * Descriptions:         AD的IO初始化
    * input parameters:     无
    * output parameters:    无
    * Returned value:       无
    *********************************************************************************************************/
    extern void ADIOInit(void);
    /*********************************************************************************************************
    * Function Name:        ADRst
    * Description:          AD复位
    * Input:                无
    * Output:               无
    * Return:               无
    *********************************************************************************************************/
    extern void ADRst(void);


    /*********************************************************************************************************
    * Function Name:        GetADValue
    * Description:          AD采样
    * Input:                无
    * Output:               无
    * Return:               无
    *********************************************************************************************************/
    extern uint16 GetADValue(void);

    /*********************************************************************************************************
    * Function Name:        GetADVoltage
    * Description:          AD采样一定点的电压值
    * Input:                无
    * Output:               无
    * Return:               无
    *********************************************************************************************************/
    extern fp32 GetADVoltage(uint8 point);
    /*********************************************************************************************************
    * Function Name:        JudgeCurrent
    * Description:          判定电流时候超过320uA,如果超过则电流*100，反之电流*10，同时usRegInputBuf[98]=100或者10
    * Input:                *usRegHoldingBuf
    * Output:               无
    * Return:               无
    *********************************************************************************************************/
    extern void JudgeCurrent(int16 *buffer,uint32 length);


#ifdef __cplusplus
}
#endif                                                                  /*  __cplusplus                 */

#endif

/********************************************************************************************************
  End Of File
********************************************************************************************************/
